'''
scipy.stats :  통계관련 기능을 제공하는 모듈
선형회귀분석
'''
import matplotlib.pyplot as plt
#add
from scipy import stats

x = [5,7,8,7,2,17,2,9,4,11,12,9,6] #독립변수(입력변수)
y = [99,86,87,88,111,86,103,87,94,78,77,85,86] #종속변수(예측대상)

slope, intercept, r, p, std_err = stats.linregress(x,y)

def myfunc(x):
    return slope * x + intercept
    #입력값 x에 대해 회귀선에 해당하는 y값을 계산합니다
#위에서 얻은  slope과 intercept를 이용해 y = wx + b

mymodel = list(map(myfunc, x)) #x의 각 요소에 myfunc함수를 적용합니다
#그결과를 리스트로 감싸서 리스트로 만듭니다
#결과적으로 mymodel은 x의 각 값에 myfunc을 적용한 결과 리스트 입니다
plt.scatter(x,y)
plt.plot(x, mymodel)
plt.show()

'''
slope 기울기
intercept 절편(직선 방정식에서 볼수 없는 상태 좌표축과 만나는 점)
y-intercept x=0일때 y의 값 y=mx + b b =y절편
y = 2x + 3 x=0을 넣으면 y=3 이함수의 y절편은 3
선형회귀에서 y-절편은 입력값이 0일때 예상되는 출력값
y = 정보처리기사 x=공부시간
모델:y = 5x + 30

r 상관계수(r-value) 1에 가까울수록 강한 선형관계
p 통계적 유의성 (작을수록 좋음)
std_err 기울기의 표준 오차(신뢰도에 영향)
이단계에서 선형모델 y = wx + b
'''

plt.scatter(x,y)
plt.show()
'''
위에는 톨게이트를 지나는 13대의 차량의 연식과 속도로 등록합니다
머신러닝에 관점에서는
회귀 : 새로운 입력이 주어졌을때 출력을 예측하는데 사용
변인간[두개 이상의 변수가 서로 영향을 주거나 연관성을 맺는 상태]의
관계를 찾을때 회귀라는 용어를 사용합니다
미래 이벤트 결과를 예측

Linear Regression 선형 회귀
- 통계학 및 머신러닝에 매무 중요한 기법
데이터를 기반으로 연속적인 숫자 값을 예측할때 사용
- 입력변수(독립변수)와 출력변수(종속변수)간의 관계를 모델링 하고
새로운 입력이 주어졌을때 출력을 예측하는데 사용

대표적인 회귀종류
선형회귀 : 입력과 출력 사이의 선형관계 가정
다항회귀 : 입력과 출력 사이가 곡선(비선형)관계일때 사용
로지스틱회귀 : 분류문제에 사용하는데 회귀의 형태를 뜀 
릿지/라쏘 회귀 : 과적합을 방지하기 위한 정규화(패널티)기법
다중회귀 : 여러개의 독립변수를 사용하는 선형회귀
'''